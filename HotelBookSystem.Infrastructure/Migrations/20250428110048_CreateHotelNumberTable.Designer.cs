// <auto-generated />
using System;
using HotelBookSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBookSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250428110048_CreateHotelNumberTable")]
    partial class CreateHotelNumberTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBookSystem.Domain.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Last_Update")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "A peaceful retreat by the ocean with stunning sunset views.",
                            ImageUrl = "https://placehold.co/600x402",
                            Last_Update = new DateOnly(1, 1, 1),
                            Name = "Seaside Escape",
                            Occupancy = 15,
                            Price = 5200.0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Cozy lodge located in the heart of the mountains, perfect for ski lovers.",
                            ImageUrl = "https://placehold.co/600x403",
                            Last_Update = new DateOnly(1, 1, 1),
                            Name = "Mountain Lodge",
                            Occupancy = 10,
                            Price = 6100.0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Modern hotel in the city center with quick access to all attractions.",
                            ImageUrl = "https://placehold.co/600x404",
                            Last_Update = new DateOnly(1, 1, 1),
                            Name = "Urban Stay",
                            Occupancy = 40,
                            Price = 4500.0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Luxurious desert resort with pools, spa, and unforgettable night skies.",
                            ImageUrl = "https://placehold.co/600x405",
                            Last_Update = new DateOnly(1, 1, 1),
                            Name = "Desert Oasis",
                            Occupancy = 12,
                            Price = 7400.0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Secluded cabins surrounded by ancient trees and wildlife.",
                            ImageUrl = "https://placehold.co/600x406",
                            Last_Update = new DateOnly(1, 1, 1),
                            Name = "Forest Hideaway",
                            Occupancy = 8,
                            Price = 3300.0
                        });
                });

            modelBuilder.Entity("HotelBookSystem.Domain.Entities.HotelNumber", b =>
                {
                    b.Property<int>("Hotel_Number")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("Hotel_Number");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelNumbers");

                    b.HasData(
                        new
                        {
                            Hotel_Number = 201,
                            HotelId = 2
                        },
                        new
                        {
                            Hotel_Number = 202,
                            HotelId = 2
                        },
                        new
                        {
                            Hotel_Number = 203,
                            HotelId = 2
                        },
                        new
                        {
                            Hotel_Number = 301,
                            HotelId = 3
                        },
                        new
                        {
                            Hotel_Number = 302,
                            HotelId = 3
                        },
                        new
                        {
                            Hotel_Number = 401,
                            HotelId = 4
                        },
                        new
                        {
                            Hotel_Number = 402,
                            HotelId = 4
                        },
                        new
                        {
                            Hotel_Number = 403,
                            HotelId = 4
                        });
                });

            modelBuilder.Entity("HotelBookSystem.Domain.Entities.HotelNumber", b =>
                {
                    b.HasOne("HotelBookSystem.Domain.Entities.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });
#pragma warning restore 612, 618
        }
    }
}
