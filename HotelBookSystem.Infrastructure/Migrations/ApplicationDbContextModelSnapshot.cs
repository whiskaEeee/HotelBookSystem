// <auto-generated />
using System;
using HotelBookSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBookSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBookSystem.Domain.Entities.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HotelId = 1,
                            Name = "Private Pool"
                        },
                        new
                        {
                            Id = 2,
                            HotelId = 1,
                            Name = "Microwave"
                        },
                        new
                        {
                            Id = 3,
                            HotelId = 1,
                            Name = "Private Balcony"
                        },
                        new
                        {
                            Id = 4,
                            HotelId = 1,
                            Name = "1 king bed and 1 sofa bed"
                        },
                        new
                        {
                            Id = 5,
                            HotelId = 2,
                            Name = "Private Plunge Pool"
                        },
                        new
                        {
                            Id = 6,
                            HotelId = 2,
                            Name = "Microwave and Mini Refrigerator"
                        },
                        new
                        {
                            Id = 7,
                            HotelId = 2,
                            Name = "Private Balcony"
                        },
                        new
                        {
                            Id = 8,
                            HotelId = 2,
                            Name = "king bed or 2 double beds"
                        },
                        new
                        {
                            Id = 9,
                            HotelId = 3,
                            Name = "Private Pool"
                        },
                        new
                        {
                            Id = 10,
                            HotelId = 3,
                            Name = "Jacuzzi"
                        },
                        new
                        {
                            Id = 11,
                            HotelId = 3,
                            Name = "Private Balcony"
                        },
                        new
                        {
                            Id = 12,
                            HotelId = 4,
                            Name = "Infinity Pool"
                        },
                        new
                        {
                            Id = 13,
                            HotelId = 4,
                            Name = "Spa and Wellness Center"
                        },
                        new
                        {
                            Id = 14,
                            HotelId = 4,
                            Name = "Private Beach Access"
                        });
                });

            modelBuilder.Entity("HotelBookSystem.Domain.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Create_Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("Update_Date")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Современный отель Mirage предлагает стильный и комфортный отдых в самом сердце города. Интерьеры сочетают в себе элегантность и минимализм, создавая атмосферу покоя и уюта. Идеально подходит как для деловых поездок, так и для туристов.",
                            ImageUrl = "\\images\\HotelImages\\8ad226ff-832a-4db3-a6b4-b3cc4a6287a6.png",
                            Name = "Mirage",
                            Occupancy = 30,
                            Price = 180.0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Hotel Veronica — это уютный 3-звездочный отель для тех, кто ищет комфортное и доступное жильё. Он расположен в спокойном районе, недалеко от общественного транспорта и популярных достопримечательностей.",
                            ImageUrl = "\\images\\HotelImages\\880d4c1c-bf94-497e-ab9d-c1258a386b01.jpg",
                            Name = "Veronica",
                            Occupancy = 30,
                            Price = 90.0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Отель \"Marina\" — это идеальное место для отдыха у моря. С его террасы открывается захватывающий вид на бескрайний океан. Номера оформлены в современном морском стиле с использованием натуральных материалов и цветов, создающих атмосферу уюта и свежести.",
                            ImageUrl = "\\images\\HotelImages\\e19e7191-30d0-49f1-82a9-8442f105df3b.jpeg",
                            Name = "Marina",
                            Occupancy = 30,
                            Price = 220.0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Отель Palace — это уникальное место для тех, кто ценит роскошь и комфорт. Номера, оформленные в классическом стиле, с панорамными окнами, предлагают потрясающий вид на город.",
                            ImageUrl = "\\images\\HotelImages\\66787e93-c4fe-4ab0-a741-8fb47dfa9440.png",
                            Name = "Palace",
                            Occupancy = 30,
                            Price = 300.0
                        });
                });

            modelBuilder.Entity("HotelBookSystem.Domain.Entities.HotelNumber", b =>
                {
                    b.Property<int>("Hotel_Number")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("Hotel_Number");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelNumbers");

                    b.HasData(
                        new
                        {
                            Hotel_Number = 101,
                            HotelId = 1
                        },
                        new
                        {
                            Hotel_Number = 102,
                            HotelId = 1
                        },
                        new
                        {
                            Hotel_Number = 103,
                            HotelId = 1
                        },
                        new
                        {
                            Hotel_Number = 201,
                            HotelId = 2
                        },
                        new
                        {
                            Hotel_Number = 202,
                            HotelId = 2
                        },
                        new
                        {
                            Hotel_Number = 203,
                            HotelId = 2
                        },
                        new
                        {
                            Hotel_Number = 301,
                            HotelId = 3
                        },
                        new
                        {
                            Hotel_Number = 302,
                            HotelId = 3
                        },
                        new
                        {
                            Hotel_Number = 303,
                            HotelId = 3
                        },
                        new
                        {
                            Hotel_Number = 401,
                            HotelId = 4
                        },
                        new
                        {
                            Hotel_Number = 402,
                            HotelId = 4
                        },
                        new
                        {
                            Hotel_Number = 403,
                            HotelId = 4
                        });
                });

            modelBuilder.Entity("HotelBookSystem.Domain.Entities.Amenity", b =>
                {
                    b.HasOne("HotelBookSystem.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Amenities")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelBookSystem.Domain.Entities.HotelNumber", b =>
                {
                    b.HasOne("HotelBookSystem.Domain.Entities.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelBookSystem.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("Amenities");
                });
#pragma warning restore 612, 618
        }
    }
}
